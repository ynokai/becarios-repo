{"ast":null,"code":"var _jsxFileName = \"/Users/mariamartinezcano/Documents/GitHub/becarios-repo/PedidosWella-main/client/src/components/UploadExcel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadExcel() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Se actualiza el estado con el archivo seleccionado\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // Función para enviar el archivo al backend\n  const uploadFile = async () => {\n    if (!file) {\n      setMessage('Seleccione un archivo.');\n      return;\n    }\n    console.log('Archivo a enviar:', file);\n    const formData = new FormData();\n    formData.append('excel', file);\n    try {\n      const response = await axios.post('http://localhost:5001/subir-excel', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage(response.data.mensaje);\n    } catch (error) {\n      console.error('Error al subir Excel:', error);\n      const errorMsg = error.response && error.response.data ? error.response.data.error : error.message;\n      setMessage('Error al subir Excel: ' + errorMsg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subir Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".xlsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Subir Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadExcel, \"yUNOnQxWjnYufcbQnTW1CT0xGVo=\");\n_c = UploadExcel;\nexport default UploadExcel;\nvar _c;\n$RefreshReg$(_c, \"UploadExcel\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadExcel","_s","file","setFile","message","setMessage","handleFileChange","e","target","files","uploadFile","console","log","formData","FormData","append","response","post","headers","data","mensaje","error","errorMsg","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["/Users/mariamartinezcano/Documents/GitHub/becarios-repo/PedidosWella-main/client/src/components/UploadExcel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction UploadExcel() {\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Se actualiza el estado con el archivo seleccionado\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  // Función para enviar el archivo al backend\n  const uploadFile = async () => {\n    if (!file) {\n      setMessage('Seleccione un archivo.');\n      return;\n    }\n    console.log('Archivo a enviar:', file);\n    const formData = new FormData();\n    formData.append('excel', file);\n\n    try {\n      const response = await axios.post('http://localhost:5001/subir-excel', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      setMessage(response.data.mensaje);\n    } catch (error) {\n      console.error('Error al subir Excel:', error);\n      const errorMsg = error.response && error.response.data ? error.response.data.error : error.message;\n      setMessage('Error al subir Excel: ' + errorMsg);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Subir Excel</h2>\n      <input type=\"file\" onChange={handleFileChange} accept=\".xlsx\" />\n      <button onClick={uploadFile}>Subir Archivo</button>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default UploadExcel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,IAAI,EAAE;MACTG,UAAU,CAAC,wBAAwB,CAAC;MACpC;IACF;IACAM,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEV,IAAI,CAAC;IACtC,MAAMW,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,IAAI,CAAC;IAE9B,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,mCAAmC,EAAEJ,QAAQ,EAAE;QAC/EK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFb,UAAU,CAACW,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMC,QAAQ,GAAGD,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACG,IAAI,GAAGE,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACE,KAAK,GAAGA,KAAK,CAACjB,OAAO;MAClGC,UAAU,CAAC,wBAAwB,GAAGiB,QAAQ,CAAC;IACjD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEvB,gBAAiB;MAACwB,MAAM,EAAC;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChE5B,OAAA;MAAQgC,OAAO,EAAErB,UAAW;MAAAa,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnD5B,OAAA;MAAAwB,QAAA,EAAInB;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAAC1B,EAAA,CAvCQD,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}