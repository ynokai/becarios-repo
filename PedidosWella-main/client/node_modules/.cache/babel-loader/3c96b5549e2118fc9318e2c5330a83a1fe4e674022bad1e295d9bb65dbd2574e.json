{"ast":null,"code":"var _jsxFileName = \"/Users/mariamartinezcano/Documents/GitHub/becarios-repo/PedidosWella-main/client/src/components/BarcodeScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Quagga from 'quagga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BarcodeScanner({\n  onDetected\n}) {\n  _s();\n  const scannerRef = useRef(null);\n  useEffect(() => {\n    if (scannerRef.current) {\n      Quagga.init({\n        inputStream: {\n          name: \"Live\",\n          type: \"LiveStream\",\n          target: scannerRef.current,\n          constraints: {\n            facingMode: \"environment\",\n            width: {\n              ideal: 300\n            },\n            height: {\n              ideal: 200\n            },\n            advanced: [{\n              willReadFrequently: true\n            }]\n          }\n        },\n        decoder: {\n          readers: [\"ean_reader\"],\n          multiple: false\n        },\n        locate: false\n      }, err => {\n        if (err) {\n          console.error(\"Quagga init error:\", err);\n          return;\n        }\n        Quagga.start();\n      });\n      const handleDetected = data => {\n        console.log(\"Datos detectados:\", data);\n        const code = data.codeResult && data.codeResult.code;\n        if (code) {\n          onDetected(code);\n          Quagga.stop();\n        }\n      };\n      Quagga.onDetected(handleDetected);\n      return () => {\n        Quagga.offDetected(handleDetected);\n        Quagga.stop();\n      };\n    }\n  }, [onDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scannerRef,\n    style: {\n      width: \"300px\",\n      height: \"200px\",\n      border: \"1px solid #ccc\",\n      backgroundColor: \"#eee\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(BarcodeScanner, \"MgSF7e+yOSEPzIqeTzYwyZaG7+4=\");\n_c = BarcodeScanner;\nexport default BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["React","useEffect","useRef","Quagga","jsxDEV","_jsxDEV","BarcodeScanner","onDetected","_s","scannerRef","current","init","inputStream","name","type","target","constraints","facingMode","width","ideal","height","advanced","willReadFrequently","decoder","readers","multiple","locate","err","console","error","start","handleDetected","data","log","code","codeResult","stop","offDetected","ref","style","border","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariamartinezcano/Documents/GitHub/becarios-repo/PedidosWella-main/client/src/components/BarcodeScanner.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Quagga from 'quagga';\n\nfunction BarcodeScanner({ onDetected }) {\n  const scannerRef = useRef(null);\n\n  useEffect(() => {\n    if (scannerRef.current) {\n      Quagga.init({\n        inputStream: {\n          name: \"Live\",\n          type: \"LiveStream\",\n          target: scannerRef.current,\n          constraints: {\n            facingMode: \"environment\",\n            width: { ideal: 300 },\n            height: { ideal: 200 },\n            advanced: [{ willReadFrequently: true }]\n          }\n        },\n        decoder: {\n          readers: [\"ean_reader\"],\n          multiple: false\n        },\n        locate: false\n      }, (err) => {\n        if (err) {\n          console.error(\"Quagga init error:\", err);\n          return;\n        }\n        Quagga.start();\n      });\n\n      const handleDetected = (data) => {\n        console.log(\"Datos detectados:\", data);\n        const code = data.codeResult && data.codeResult.code;\n        if (code) {\n          onDetected(code);\n          Quagga.stop();\n        }\n      };\n\n      Quagga.onDetected(handleDetected);\n\n      return () => {\n        Quagga.offDetected(handleDetected);\n        Quagga.stop();\n      };\n    }\n  }, [onDetected]);\n\n  return (\n    <div\n      ref={scannerRef}\n      style={{\n        width: \"300px\",\n        height: \"200px\",\n        border: \"1px solid #ccc\",\n        backgroundColor: \"#eee\"\n      }}\n    ></div>\n  );\n}\n\nexport default BarcodeScanner;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,cAAcA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAMC,UAAU,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,IAAIQ,UAAU,CAACC,OAAO,EAAE;MACtBP,MAAM,CAACQ,IAAI,CAAC;QACVC,WAAW,EAAE;UACXC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE,YAAY;UAClBC,MAAM,EAAEN,UAAU,CAACC,OAAO;UAC1BM,WAAW,EAAE;YACXC,UAAU,EAAE,aAAa;YACzBC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAI,CAAC;YACrBC,MAAM,EAAE;cAAED,KAAK,EAAE;YAAI,CAAC;YACtBE,QAAQ,EAAE,CAAC;cAAEC,kBAAkB,EAAE;YAAK,CAAC;UACzC;QACF,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE,CAAC,YAAY,CAAC;UACvBC,QAAQ,EAAE;QACZ,CAAC;QACDC,MAAM,EAAE;MACV,CAAC,EAAGC,GAAG,IAAK;QACV,IAAIA,GAAG,EAAE;UACPC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;UACxC;QACF;QACAxB,MAAM,CAAC2B,KAAK,CAAC,CAAC;MAChB,CAAC,CAAC;MAEF,MAAMC,cAAc,GAAIC,IAAI,IAAK;QAC/BJ,OAAO,CAACK,GAAG,CAAC,mBAAmB,EAAED,IAAI,CAAC;QACtC,MAAME,IAAI,GAAGF,IAAI,CAACG,UAAU,IAAIH,IAAI,CAACG,UAAU,CAACD,IAAI;QACpD,IAAIA,IAAI,EAAE;UACR3B,UAAU,CAAC2B,IAAI,CAAC;UAChB/B,MAAM,CAACiC,IAAI,CAAC,CAAC;QACf;MACF,CAAC;MAEDjC,MAAM,CAACI,UAAU,CAACwB,cAAc,CAAC;MAEjC,OAAO,MAAM;QACX5B,MAAM,CAACkC,WAAW,CAACN,cAAc,CAAC;QAClC5B,MAAM,CAACiC,IAAI,CAAC,CAAC;MACf,CAAC;IACH;EACF,CAAC,EAAE,CAAC7B,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IACEiC,GAAG,EAAE7B,UAAW;IAChB8B,KAAK,EAAE;MACLrB,KAAK,EAAE,OAAO;MACdE,MAAM,EAAE,OAAO;MACfoB,MAAM,EAAE,gBAAgB;MACxBC,eAAe,EAAE;IACnB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAACrC,EAAA,CA3DQF,cAAc;AAAAwC,EAAA,GAAdxC,cAAc;AA6DvB,eAAeA,cAAc;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}